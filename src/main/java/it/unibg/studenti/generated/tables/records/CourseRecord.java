/*
 * This file is generated by jOOQ.
 */
package it.unibg.studenti.generated.tables.records;


import it.unibg.studenti.generated.tables.Course;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourseRecord extends UpdatableRecordImpl<CourseRecord> implements Record11<Integer, String, String, String, Double, Double, Double, String, Double, Double, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>course_management.course.idcourse</code>.
     */
    public void setIdcourse(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>course_management.course.idcourse</code>.
     */
    public Integer getIdcourse() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>course_management.course.code</code>.
     */
    public void setCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>course_management.course.code</code>.
     */
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>course_management.course.ssd</code>.
     */
    public void setSsd(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>course_management.course.ssd</code>.
     */
    public String getSsd() {
        return (String) get(2);
    }

    /**
     * Setter for <code>course_management.course.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>course_management.course.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>course_management.course.credits</code>.
     */
    public void setCredits(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>course_management.course.credits</code>.
     */
    public Double getCredits() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>course_management.course.students</code>.
     */
    public void setStudents(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>course_management.course.students</code>.
     */
    public Double getStudents() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>course_management.course.hours</code>.
     */
    public void setHours(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>course_management.course.hours</code>.
     */
    public Double getHours() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>course_management.course.param</code>.
     */
    public void setParam(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>course_management.course.param</code>.
     */
    public String getParam() {
        return (String) get(7);
    }

    /**
     * Setter for <code>course_management.course.period</code>.
     */
    public void setPeriod(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>course_management.course.period</code>.
     */
    public Double getPeriod() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>course_management.course.year</code>.
     */
    public void setYear(Double value) {
        set(9, value);
    }

    /**
     * Getter for <code>course_management.course.year</code>.
     */
    public Double getYear() {
        return (Double) get(9);
    }

    /**
     * Setter for <code>course_management.course.yearOff</code>.
     */
    public void setYearoff(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>course_management.course.yearOff</code>.
     */
    public String getYearoff() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, String, String, String, Double, Double, Double, String, Double, Double, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Integer, String, String, String, Double, Double, Double, String, Double, Double, String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Course.COURSE.IDCOURSE;
    }

    @Override
    public Field<String> field2() {
        return Course.COURSE.CODE;
    }

    @Override
    public Field<String> field3() {
        return Course.COURSE.SSD;
    }

    @Override
    public Field<String> field4() {
        return Course.COURSE.NAME;
    }

    @Override
    public Field<Double> field5() {
        return Course.COURSE.CREDITS;
    }

    @Override
    public Field<Double> field6() {
        return Course.COURSE.STUDENTS;
    }

    @Override
    public Field<Double> field7() {
        return Course.COURSE.HOURS;
    }

    @Override
    public Field<String> field8() {
        return Course.COURSE.PARAM;
    }

    @Override
    public Field<Double> field9() {
        return Course.COURSE.PERIOD;
    }

    @Override
    public Field<Double> field10() {
        return Course.COURSE.YEAR;
    }

    @Override
    public Field<String> field11() {
        return Course.COURSE.YEAROFF;
    }

    @Override
    public Integer component1() {
        return getIdcourse();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public String component3() {
        return getSsd();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public Double component5() {
        return getCredits();
    }

    @Override
    public Double component6() {
        return getStudents();
    }

    @Override
    public Double component7() {
        return getHours();
    }

    @Override
    public String component8() {
        return getParam();
    }

    @Override
    public Double component9() {
        return getPeriod();
    }

    @Override
    public Double component10() {
        return getYear();
    }

    @Override
    public String component11() {
        return getYearoff();
    }

    @Override
    public Integer value1() {
        return getIdcourse();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public String value3() {
        return getSsd();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public Double value5() {
        return getCredits();
    }

    @Override
    public Double value6() {
        return getStudents();
    }

    @Override
    public Double value7() {
        return getHours();
    }

    @Override
    public String value8() {
        return getParam();
    }

    @Override
    public Double value9() {
        return getPeriod();
    }

    @Override
    public Double value10() {
        return getYear();
    }

    @Override
    public String value11() {
        return getYearoff();
    }

    @Override
    public CourseRecord value1(Integer value) {
        setIdcourse(value);
        return this;
    }

    @Override
    public CourseRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public CourseRecord value3(String value) {
        setSsd(value);
        return this;
    }

    @Override
    public CourseRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public CourseRecord value5(Double value) {
        setCredits(value);
        return this;
    }

    @Override
    public CourseRecord value6(Double value) {
        setStudents(value);
        return this;
    }

    @Override
    public CourseRecord value7(Double value) {
        setHours(value);
        return this;
    }

    @Override
    public CourseRecord value8(String value) {
        setParam(value);
        return this;
    }

    @Override
    public CourseRecord value9(Double value) {
        setPeriod(value);
        return this;
    }

    @Override
    public CourseRecord value10(Double value) {
        setYear(value);
        return this;
    }

    @Override
    public CourseRecord value11(String value) {
        setYearoff(value);
        return this;
    }

    @Override
    public CourseRecord values(Integer value1, String value2, String value3, String value4, Double value5, Double value6, Double value7, String value8, Double value9, Double value10, String value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CourseRecord
     */
    public CourseRecord() {
        super(Course.COURSE);
    }

    /**
     * Create a detached, initialised CourseRecord
     */
    public CourseRecord(Integer idcourse, String code, String ssd, String name, Double credits, Double students, Double hours, String param, Double period, Double year, String yearoff) {
        super(Course.COURSE);

        setIdcourse(idcourse);
        setCode(code);
        setSsd(ssd);
        setName(name);
        setCredits(credits);
        setStudents(students);
        setHours(hours);
        setParam(param);
        setPeriod(period);
        setYear(year);
        setYearoff(yearoff);
    }
}

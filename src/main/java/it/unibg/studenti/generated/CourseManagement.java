/*
 * This file is generated by jOOQ.
 */
package it.unibg.studenti.generated;


import it.unibg.studenti.generated.tables.Course;
import it.unibg.studenti.generated.tables.Degree;
import it.unibg.studenti.generated.tables.DegreeHasCourse;
import it.unibg.studenti.generated.tables.Department;
import it.unibg.studenti.generated.tables.Referent;
import it.unibg.studenti.generated.tables.Staff;
import it.unibg.studenti.generated.tables.User;
import it.unibg.studenti.generated.tables.Year;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourseManagement extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>course_management</code>
     */
    public static final CourseManagement COURSE_MANAGEMENT = new CourseManagement();

    /**
     * The table <code>course_management.course</code>.
     */
    public final Course COURSE = Course.COURSE;

    /**
     * The table <code>course_management.degree</code>.
     */
    public final Degree DEGREE = Degree.DEGREE;

    /**
     * The table <code>course_management.degree_has_course</code>.
     */
    public final DegreeHasCourse DEGREE_HAS_COURSE = DegreeHasCourse.DEGREE_HAS_COURSE;

    /**
     * The table <code>course_management.department</code>.
     */
    public final Department DEPARTMENT = Department.DEPARTMENT;

    /**
     * The table <code>course_management.referent</code>.
     */
    public final Referent REFERENT = Referent.REFERENT;

    /**
     * The table <code>course_management.staff</code>.
     */
    public final Staff STAFF = Staff.STAFF;

    /**
     * The table <code>course_management.user</code>.
     */
    public final User USER = User.USER;

    /**
     * The table <code>course_management.year</code>.
     */
    public final Year YEAR = Year.YEAR;

    /**
     * No further instances allowed
     */
    private CourseManagement() {
        super("course_management", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Course.COURSE,
            Degree.DEGREE,
            DegreeHasCourse.DEGREE_HAS_COURSE,
            Department.DEPARTMENT,
            Referent.REFERENT,
            Staff.STAFF,
            User.USER,
            Year.YEAR
        );
    }
}
